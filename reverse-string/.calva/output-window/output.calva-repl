; This is the Calva evaluation results output window.
; TIPS: The keyboard shortcut `ctrl+alt+c o` shows and focuses this window
;   when connected to a REPL session.
; Please see https://calva.io/output/ for more info.
; Happy coding! ♥️

; Jacking in...
; Starting Jack-in Terminal: clojure -Sdeps '{:deps {nrepl/nrepl {:mvn/version,"0.8.3"},cider/cider-nrepl {:mvn/version,"0.25.8"}}}' -A:calva/reveal-dep-only -m nrepl.cmdline --middleware "[cider.nrepl/cider-middleware]"
; Hooking up nREPL sessions...
; Connected session: clj
; TIPS: 
;   - You can edit the contents here. Use it as a REPL if you like.
;   - `alt+enter` evaluates the current top level form.
;   - `ctrl+enter` evaluates the current form.
;   - `alt+up` and `alt+down` traverse up and down the REPL command history
;      when the cursor is after the last contents at the prompt
;   - Clojure lines in stack traces are peekable and clickable.
clj꞉user꞉> 
; Jack-in done.
clj꞉user꞉> 
nil
clj꞉reverse-string꞉> 
nil
clj꞉reverse-string꞉> 
nil
clj꞉reverse-string꞉> 
#{:basic-println}
clj꞉reverse-string꞉> 
nil
clj꞉reverse-string꞉> 
#{:basic-println}
clj꞉reverse-string꞉> 
nil
clj꞉reverse-string꞉> 
nil
clj꞉reverse-string꞉> 
#{:basic-println}
clj꞉reverse-string꞉> 
#'reverse-string/get-x
clj꞉reverse-string꞉> 
#'reverse-string/get-y
clj꞉reverse-string꞉> 
nil
clj꞉reverse-string꞉> 
nil
clj꞉reverse-string꞉> 
nil
clj꞉reverse-string꞉> 
nil
clj꞉reverse-string꞉> 
nil
clj꞉reverse-string꞉> 
nil
clj꞉reverse-string꞉> 
